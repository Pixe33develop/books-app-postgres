// Generated by CoffeeScript 1.9.3
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(['views/base/view', 'text!templates/book.hbs', 'views/modal-view-factory'], function(View, template, ModalViewFactory) {
    'use strict';
    var BookView;
    return BookView = (function(superClass) {
      extend(BookView, superClass);

      function BookView() {
        this.saveBook = bind(this.saveBook, this);
        return BookView.__super__.constructor.apply(this, arguments);
      }

      BookView.prototype.template = template;

      template = null;

      BookView.prototype.autoRender = true;

      BookView.prototype.className = 'book';

      BookView.prototype.events = {
        'click .remove-book': 'removeBook',
        'click': 'showModalBook'
      };

      BookView.prototype.removeBook = function() {
        return this.model.destroy();
      };

      BookView.prototype.saveBook = function(book) {
        this.model.set(book);
        this.model.save();
        return this.render();
      };

      BookView.prototype.showModalBook = function() {
        return ModalViewFactory.editBook(this.saveBook, this.model.attributes);
      };

      return BookView;

    })(View);
  });

}).call(this);
