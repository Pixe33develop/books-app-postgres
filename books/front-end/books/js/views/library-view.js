// Generated by CoffeeScript 1.9.3
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(['views/base/view', 'text!templates/library.hbs', 'views/modal-view-factory', 'handlebars'], function(View, template, BookViewFactory, Handlebars) {
    'use strict';
    var LibraryView;
    return LibraryView = (function(superClass) {
      extend(LibraryView, superClass);

      function LibraryView() {
        this.addBook = bind(this.addBook, this);
        return LibraryView.__super__.constructor.apply(this, arguments);
      }

      LibraryView.prototype.template = template;

      template = null;

      LibraryView.prototype.autoRender = true;

      LibraryView.prototype.className = 'library';

      LibraryView.prototype.events = {
        'click .add-book': 'showModalBook'
      };

      LibraryView.prototype.initialize = function(options) {
        LibraryView.__super__.initialize.apply(this, arguments);
        this.showAttributes = this.profilesHash(options.profiles.models);
        return Handlebars.registerHelper('attr-show', (function(_this) {
          return function(cond) {
            return cond.fn(_this.showAttributes);
          };
        })(this));
      };

      LibraryView.prototype.addBook = function(book) {
        return this.subviewsByName['books'].collection.addBook(book);
      };

      LibraryView.prototype.showModalBook = function() {
        return BookViewFactory.createBook(this.addBook);
      };

      LibraryView.prototype.profilesHash = function(profiles) {
        var i, len, profile, result;
        result = {};
        for (i = 0, len = profiles.length; i < len; i++) {
          profile = profiles[i];
          result[profile.attributes.column_name.toLowerCase()] = profile.attributes.is_visible;
        }
        return result;
      };

      return LibraryView;

    })(View);
  });

}).call(this);
