// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(['controllers/base/controller', 'views/library-view', 'views/books-view', 'views/profiles-view', 'views/options-view', 'models/books', 'models/profiles'], function(Controller, LibraryView, BooksView, ProfilesView, OptionsView, Books, Profiles) {
    'use strict';
    var LibraryController;
    return LibraryController = (function(superClass) {
      extend(LibraryController, superClass);

      function LibraryController() {
        return LibraryController.__super__.constructor.apply(this, arguments);
      }

      LibraryController.prototype.books = function() {
        this.profiles = new Profiles;
        this.profiles.fetch().done((function(_this) {
          return function() {
            _this.view = new LibraryView({
              region: 'content',
              profiles: _this.profiles
            });
            _this.books = new Books;
            _this.view.subview('books', new BooksView({
              collection: _this.books,
              region: 'books'
            }));
            return _this.books.fetch();
          };
        })(this));
        return this.profiles.fetch();
      };

      LibraryController.prototype.profile = function() {
        this.view = new OptionsView({
          region: 'content'
        });
        this.profiles = new Profiles;
        this.view.subview('profiles', new ProfilesView({
          collection: this.profiles,
          region: 'profiles'
        }));
        return this.profiles.fetch();
      };

      return LibraryController;

    })(Controller);
  });

}).call(this);
